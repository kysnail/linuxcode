# （第4讲） PHP5.4  运算符、流程控制

 1. PHP5.4 的运算符与优先级
 2. PHP5.4 的流程控制语句if / switch

## PHP5.4 的运算符与优先级
PHP中有丰富的运算符集，它们中大部分直接来自于C语言。按照不同功能区分，运算符可以分为：
 
 1. 算术运算符
 2. 字符串运算符
 3. 赋值运算符
 4. 位运算符
 5. 条件运算符
 6. 以及逻辑运算符等。

当各种运算符同在一个表达式中时，它们的运算是有一定的优先级的，下面将详细介绍。

### 算术运算符
算术运算就是用来处理四则运算的符号，这是最简单，也最常用的符号，尤其是数字的处理，几乎都会使用到算术运算符号

 1. +
 2. -
 3. *
 4. /
 5. %
 6. ++
 7. --

### 字符串运算符
字符串运算符号只有一个.(点)就是英文的句号。 它可以将字符串连接起来，组成新字符串，也可以将字符串与数字连接，这时类型会自动转换。

    <?php 
      $str="string php100";      
      echo $str."web";       //输出结果string php100web
      echo $str.123;         //输出结果string php100123
      $str2="web";
      echo $str.$str2;       //输出结果string php100web
    ?>

### 赋值运算符
赋值运算实际上是将右侧表达式的值赋给左侧变量；或者说是将原表达式的值拷贝到新变量中，所以改变其中一个并不影响另一个。

 1. =
 2. +=
 3. -=
 4. `*=`
 5. /=
 6. %=
 7. .=

### 位运算符
在计算机中，任何数字、字母或符号都是以二进制形式存储的。二进制数可以方便地按位进行计算，由于二进制位只由0或1组成，所以计算起来相当简便。PHP中提供了位与、位或、位非、位异或，以及位右移和位左移等操作。

 1. &
 2. |
 3. ~
 4. ^
 5. `<<`
 6. `>>`

#### Demo
下面演示一下 `位运算符` 。

    <?php        //二进制        十进制
     $x=1021;    //1111111101        1021
     $y=15;      //0000001111        15

     $z = $x & $y;   //0000001101        13  位与运算
     $z = $x | $y;   //1111111111        1023    位或运算
     $z = $x ^ $y;   //1111110010        1010    位异或运算

     $z = $x << 1;   //11111111010       2042    位左移运算
     $z = $x << 2;   //111111110100      4084    位左移运算
     $z = $x >> 1;   //111111110     510 位右移运算
     $z = $x >> 2;   //11111111      255 位右移运算
    ?>

位运算是基于系统底层的运算，在PHP中并不常用。然而许多问题都可以简单地归结为0和1的问题，也为读者提供了解决问题的新的角度。例如权限的控制我们就可以使用位运算很方便的制作出不同用户拥有的不同权限，后面章节会继续介绍。

### 比较运算符
比较运算符负责条件判断、比较等操作，是程序中经常被用到的一种运算符。比较运算的结果只有两种：要么是“真”，要么是“假”。

 1. `>`
 2. `<`
 3. `>=`
 4. `<=`
 5. `==`
 6. `!=`  `<->`  `<>`
 7. `<>`  `<->`  `!=`
 8. `===`
 9. !==

### 逻辑运算符
逻辑运算有点类似前面讲过的位运算的方式，但逻辑运算更侧重在程序书写和日常开发中使用，比如 if switch 语句等。PHP提供了逻辑与、或、异或、非等逻辑运算符。

 1. AND
 2. OR
 3. XOR
 4. &&
 5. ||
 6. ！

### 运算符的优先级

    优先级     方向    运算符                                    备注
    ------------------------------------------------------------------------------
    1            ->     ()                                     括号
    2            ->     []                                     数组
    3            \      ++ --                                  递归运算
    4            \      ! ~ int float string array object @    类型
    5            ->    * / %                                   算数运算
    6            ->    + - .                                   算数运算和字符运算
    7            \     << >>                                   位运算
    8            \     < <= > >=                               比较运算
    9            ->    == ~= === !==                           比较运算
    10           ->    &                                       位运算
    11           ->    ^                                       位运算 
    12           ->    |                                       位运算
    13           ->    &&                                      逻辑运算
    14           ->    ||                                      逻辑运算
    15           ->    ?:                                      三目运算
    16           <-    += -= /= *= .= %= &= |= ^= <<== >>==    赋值运算
    17           ->    And                                     逻辑运算
    18           ->    Xor                                     逻辑运算
    19           ->    Or                                      逻辑运算
    20           ->    ,                                       多处

### PHP5.4 的流程控制语句if / switch
1. if语句结构：

    格式：
    ---------------
    if（expr）{
        statement
    }

2. if…else…语句结构：

    格式：
    ---------------
    if（expr）{
        Statement1
    }else{
        Statement2
    }

3. if…elseif…语句结构：

    格式：
    ---------------
    if（expr）{
        statement1
    }elseif(expr2){
        statement2
    }elseif(expr3){
        ...
    }else{
        statement4
    }

#### Demo

    <?php
     $d=date("D");
     if ($d=="Fri"){
       echo "Have a nice weekend!"; 
     } elseif ($d=="Sun"){
       echo "Have a nice Sunday!";
     } else {
       echo "Have a nice day!";
     } 
    ?>

### PHP5.4 的流程控制语句if / switch
嵌套的if和else语句可以处理多分支流程情况，但使用起来比较繁琐而且分析也不太清晰，为此PHP使用 switch 语句可以避免冗长的 if..elseif..else 代码块。

    格式：
    switch (expr)
    {
    case expr1:
      statement;
      break;  
    case expr2:
      statement;
      break;  
    ……
    default:
      statement;
    }

    --------------------------Demo----------------------------

    switch (date("D")) {
        case "Mon":
            echo "今天星期一";
            break;
        case "Tue":
            echo "今天星期二";
            break;
        ...
        default:
            echo "今天放假";
            break;
    }





