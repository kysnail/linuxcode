# Shell 编程实验

本节试验主要通过完成三个具体的例子来了解 Shell 程序的编写步骤。

# 实验原理
Shell 在 Linux 操作系统中担当着重要的角色，是一个交互式命令语言解释程序，是系统提供可输入指令并由操作系统执行
命令的最重要的系统程序。读取输入的指令，然后执行特定的程序，完成指定给操作系统的任务，并将输出结果返回。
不属于内核部分，而是在核心之外，工作在用户区。其基本功能是解释并执行输入的各种命令，实现用户与 Linux 核心的接口。
在多用户多进程的 Linux 操作系统中，核心为每个终端用户建立一个进程去执行 shell 解释程序。

## Shell 执行过程如下：
1. 读取输入的命令行。
2. 解析命令，按照命令名查找并调用系统文件，将其他参数封装为特定的形式传递给系统调用 **execve()**。
3. 由终端进程调用 **fork()** 函数建立一个子进程。
4. 终端进程本身调用 **wait4()** 挂起当前进程来等待子进程完成（后台命令除外）。子进程通过调用 **execv()** 运行，根据命令名到目录中查找有关文件（命令解释程序构成的文件），调入内存，执行这个程序（解释命令）。
5. 如果是后台命令（以 **&** 结尾），不用调用 **wait4()** 进行等待而是直接提示用户输入下一条命令，转到 1 ，否则调用 **wait4()** 等待子进程完成。

### 利用 Shell 编程，实现时间密码的验证

