第二章 Python 起步
==================

    Python 语法简单，容易学习。但是有一些容易出错的地方。比如：
        - 脚本结构
        - 基本输入/输出
        - 中文的使用
	- 把 Python 当作计算器

脚本基本结构
------------
    Python 脚本的结构非常清晰，在 Python 中不使用 C 语言中的花括号表示语句快，而是用缩进。代码缩进
    一般用在函数定义、类的定义以及一些控制语句中。一般来说，行尾的“:”表示代码缩进的开始。 ::

	if a > b:
	    print a		# 代码缩进，如果 a > b ，则执行 print a
	else:
	    print b		# 代码缩进，如果 a <= b ，则执行 print b

    下面是一个比较复杂的代码缩进 ::

	if a > b:
	    if a == 1:
		print a
	    else:
		if a == 0:
		    print a
		else:
		    pass
	elif a == b:
	    print a,b
	else:
	    print b	

    **Notes**
 
    处于同一级的代码缩进，其缩进量要保持一致，否则将导致错误。 ::

	if a > b:
	    if a == 1:
		print a
	    else:
		if a == 0:
		    print a
		else:
		    pass
	elif a == b:
	  print a
	    print b
	else:
	    print b

注释种类
````````
- # -> 单行注释
- ''' -> 多行注释
- """ -> 多行注释

demo
::::
 ::

	'''
	三个单引号包围的注释
	该段代码判断 a,b 值的大小
	并根据不同的情况输出
	如果 a 大于 b 则输出 a
	如果 a 小于等于 b 则输出 b
	'''
	if a > b:	# 判断 a, b 的大小
	    print a 	# 输出 a
	else:
	    print b	# 输出 b
	"""
	三个双引号包围的注释
	代码判断结束
	print a
	上边的语句不会被执行
	"""

Semicolon 
`````````
    在 Python 中，一般来说一条语句占用一行。一条语句结束一般不需要使用 C 语言中的“;”，但在 Pythonon 中也可以
    用 “;” 将两条语句写在一行。另外如果缩进语句中只有一条语句，可以以将其写在“:” ::

	if a > b:print a	# 缩进语句写在冒号之后
	else:print b		
	print a;print b		# 使用分号将两条语句写在同一行

单引号/双引号
`````````````

    在 Python 中，单引号和双引号没有区别，都可用来包围字符串。另外，单引号中的字符串可以包含双引号，双引号中的
    字符串可以包含单引号，而不需要使用转义字符。 ::

	a = "What's your name?"
	b = 'I say: "What is your name?"'

使用 '''/""" 格式化字符
```````````````````````
    另外使用 3 个单引号或者 3 个双引号所包围的字符不仅可以作为注释，还可以作为格式化的字符。当使用 Python 中的
    "print" 输出这些字符时，其格式保持不变。 ::

	a = '''
	这是格式化的字符
		此处的缩进将输出
	在这里也可以使用'
	或者"
	不影响
	"""
	当然还有三个双引号
	"""
	'''
	
	b = """
	这是三个双引号包围的
	格式化	    	字符
	'''
	"""

分行处理
````````
    在 Python 中如果语句较长，需要分成几行写时可以使用
- "\"
- "()"

使用 "\"
::::::::
    使用 "\" 将一条语句写成几行。 ::

	# 使用 "\" 续行
	# 需要注意的是 "\" 之后不能有任何字符
	# 不能在 "\" 之后使用 "#" 注释
	c = a * 2\
		+ b\
		- b\
		* 3
	# 使用圆括号

使用 "()"
:::::::::
    使用 "()" 将一条语句写成几行。 ::

	# 使用圆括号包围分成多行的语句
	# 在语句中可以使用 "#" 注释
	c = ( a *
	    	b - 1
		+ 3
		/
		2)
