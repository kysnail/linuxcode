# 指针
指针是 C 语言中最难掌握的概念，但同时也是最重要的概念。指针常常用在函数的参数传递和动态分配内存中，在
数据结构中，指针的使用也非常频繁。指针常常与地址、变量、数组和函数联系在一起。

本节主要学习内容包括：

* 指针变量
* 指针变量的引用
* 指针与数组
* 函数指针与指针函数

## 指针变量
`指针` 是一种变量、也称指针变量，它的值是内存地址。一般的变量通常直接包含一个具体的值，如整数、浮点数
和字符。`指针包含的是变量的地址`，而变量又拥有自己的具体值。变量名直接引用了一个值，指针间接地引用了
一个值。

    ★
    一个变量的地址称为该变量的"指针"。

`指针变量` ： 

    如果有一个变量用来存放另一个变量的地址，则称这个变量为指针变量。

在 C 语言中，变量在使用前都需要提前声明。例如，要声明一个指针变量：

    int *qPtr, q;

q 是整型变量，表示要存放一个整数类型的值；qPtr 是一个整型指针变量，表示要存放一个变量的地址，而这个变量
是整数类型。qPtr 叫做指向整型的指针。

在声明指针变量时，"`*`" 只是表示一个指针类型标识符，指针变量的声明也可以写成：

    int* qPtr

指针变量可以在声明的时候赋值。例如，给一个指针变量赋值：

    int q = 5;
    int *qPtr = &q;

也可以在声明后赋值：

    int q = 5, *qPtr;
    qPtr = &q;

这两种赋值方法都是把变量 q 的地址赋值给指针变量 qPtr。`qPtr = &q` 叫做指向变量 q，其中，`&` 是取址运算符，
表示返回变量 q 的地址。

关于指针变量与普通变量之间的关系可以用下面的这个比喻说明：

    有两个抽屉 A 和 B，抽屉 A 和 B 各有一个钥匙。为了方便，可以把两把钥匙都带在身上，需要取抽屉 A 中的东西
    时打开抽屉，也可以为了安全，把抽屉 A 的钥匙放到抽屉 B 中，把抽屉 B 的钥匙带在身上，需要取抽屉 A 中的东
    西时，先打开抽屉 B ，再取出抽屉 A 的钥匙，然后打开抽屉 A，取出需要的东西。

    前一种方法相当于通过变量直接饮用，后一种方法相当于通过指针间接引用。
    其中，抽屉 B 的钥匙相当于指针变量，抽屉 A 的钥匙相当于一般的变量。


