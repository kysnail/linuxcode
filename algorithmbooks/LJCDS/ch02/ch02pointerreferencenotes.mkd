# 指针变量的引用
指针变量和变量一样，都可以对数据进行操作，指针变量的操作主要是通过取地址运算符 `&` 和指针运算符 `*` 来实现
的。例如，`&a` 指的是变量 a 的地址，`*ptr` 表示变量 ptr 所指向的内存单元存放的内容。

下面通过例子说明 `&` 和 `*` 运算符及指针变量的使用。

## 2.3 变量与指向该变量的指针演示
取地址 `&` 和指针运算符 `*` 是互逆的操作。

	#include <stdio.h>

	int main()
	{
			int var = 5;
			int *pVar;
			pVar = &var;

			printf("address of var is %p, pVar value is %p.\n", &var, pVar);
			// 打印 var 的值和 pVar 指向变量的内容
			printf("the value of var is %d, pVar point to %d.\n", var, *pVar);
			// 运算符 '*' 和 '&' 是互逆的。
			printf("&*pVar = %p, *&pVar = %p. so '&*pVar == *&pVar'.\n", &*pVar, *&pVar);
	}

运行结果如下：

    address of var is 0xbfa550b0, pVar value is 0xbfa550b0.
    the value of var is 5, pVar point to 5.
    &*pVar = 0xbfa550b0, *&pVar = 0xbfa550b0. so '&*pVar == *&pVar'

这里需要注意以下问题：

    指针变量只能用来存放地址或指针，不能将一个整型赋值给一个指针变量。指针变量的类型应和所指向的变量类型相同。

