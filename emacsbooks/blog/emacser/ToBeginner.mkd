##致Emacs初学者

### 从哪里开始
那么到底怎么学习Emacs呢? 我觉得刚开始学习Emacs的时候, 应该先了解一下Emacs的一些基本概念和基本知识(毕竟Emacs和其他的IDE的一些概念和理念是不同的), 比如, Emacs的buffer, window, frame, mode, Isearch. 知道这些最基础的概念之后, 应该再学习一下最基本的定制知识, 比如绑定快捷键啊, 定制选项啊, 还有看文档的方法, Emacs中的文档有函数自己的文档, 还有强大的info系统. 关于这些基础知识, 我推荐你去看《学习GNU Emacs》(中文版, 英文版)这本书, 非常适合初学者. 不过如果你想要快速入门的话, 可以看Emacs快速指南, 打开Emacs后, 按C-h t即可, 这是Emacs内置的文档, 有中文版. 笔者还写过一篇介绍这方面基础知识的文章, Emacs初学者必知必会, 感兴趣的读者也可去看看.

    C-h t

### Emacs的考验

#### 按键难按
太冤枉Emacs了, Emacs的按键是最好按的, 你最好先把你的Control键和Caps lock键交换一下。

其实学习Emacs是有捷径的，那就是 **天天用**。

### Emacs进阶
当你掌握了上述的基本概念和基础知识后, 恭喜你, 你将开始初学者的第二个阶段.
接下来, 你可以去网上找一些牛人的配置来看看, 比如王垠(清华的退学博士, 很佩服), 叶文斌(他的主页不在了, 我备份了一份), 王纯业(他的主页也不在了), pluskid(浙大的牛人, yasnippet的作者). 我刚开始学Emacs的时候, 基本上也是看他们的配置. 看到别人的配置中比较有意思的地方, 你再拷贝到你的配置中, 这样看多了, 你就慢慢熟悉Emacs了. 但是我建议不要直接拿别人的配置文件来使用, 毕竟别人的配置是别人的, 它包括了别人的使用习惯, 不一定适合你. 我的配置中就改了一些Emacs基本的快捷键, 比如`C-k’我改成了删除一行, 而不是删除光标到行尾, 这也许不适合你. 当然我对于那些尽量能提供给别人的配置我是单独拿出来做成一个包的, 比如我的颜色主题color-theme-ahei, 还有dired-lis(这是一个使得你在dired中直接输入字母跳到对应文件的包, 就像Total Commander中那样, 非常的好用). 你可以去直接使用这些包, 再经过你自己的配置, 就为你所用了.
初学者在配置Emacs的过程中, 我相信经常会遇到加了某个配置后, 以前某个能用的功能现在不能用了, 不用着急, 我有三条妙计为你排忧解难:

#### --debug-init
当你的配置出现问题时, 在Emacs启动命令后增加参数”–debug-init”, 这样启动后, 如果配置出错, Emacs会报出具体出错的位置, 这样你就可以很容易定位问题了.

#### Version Control
上述加参数的方法, 只适用于你的配置使得Emacs启动出现错误, 但是如果Emacs启动没有出现错误, 但是你需要的某个功能就是不能正常使用该怎么办呢? 很简单, 把你的配置用版本控制工具管理起来, 我的配置DEA就用svn管理起来, 记住, 用版本控制工具的时候, 一定要记得写日志, 方便以后出问题的时候, 容易找出问题, 我接触的人中, 好多人都没有写日志的习惯. 当你现在的版本出现问题时, 你可以看看以前的版本有没有问题, 找到一个没有问题的版本, 然后再用现在的版本和以前的版本比较一下, 看是修改了哪些配置, 然后再在这些配置上集中找问题.

### 成为Emacs高手
这就需要你懂Elisp语言了.
学Elisp主要是看文档(废话), 一个是Emacs函数的自文档(M-x describe-function, 默认按键绑定是C-h f), 还有更强大的就是Elisp的info. 英文不好的同志(其实Emacs函数的自文档和info的英文都很简单)可以看看叶文斌的elisp教程,《GNU Emacs Lisp编程入门中文版》. 刚开始学Elisp的时候, 可以先看看上面的2个中文教程, 系统了解一下Elisp, 看了差不多后, 可以开始看看Emacs函数的自文档, 自文档非常的方便, 可以在看代码的时候, 随时遇到不懂的函数随时查看文档. 我写了两个查看Elisp自文档和代码非常方便的包, find-symbol, describe-symbol, 看Emacs的代码和别的插件的代码也是一个非常好的学习Elisp的方法，有兴趣的同志可以试试. 等到自文档看的比较熟练后, 可以看info了, info写的非常详细. 当然, 以上过程, 并不一定要循序渐进, 你也可以在看自文档的同时, 看看info.

    C-h f

### Emacs学习方法总结
 * 天天用 太重要了
 * 多看文档，包括Emacs的自文档和info，info有Emacs的info和Elisp的info，info非常非常之详细，想要学好Emacs必须要看的，不要怕英文，我的英文也不好，经常看就明白了，而且还锻炼了自己的英文，还有自文档和info的英文真的是很简单。

### Comment - 1

 * ntmacs
 * $,^等都是有特殊意义的，在正则表达式里这二个分别代表什么自己去想下知道人家为什么要这么设了！删除同样可以直接d$,d^.试下就知道了。

### Comment - 2
    我用Emacs开发Java已经有很久了。同事非常羡慕我，因为我有JDEE做代码智能提示和代码跳转，搞JDEE真的是折腾了很久。JDEE也可以很方便的调试，不过要用到jdb调试。我用Maven管理项目，因此其他的IDE也可以共享我的项目。访问文档也很简单，我安装了一个java doc helper，真的很方便。
当使用MySQL的时候，也十分方便。
    唯一不方便的就是大规模的代码重构因为要估计svn命令，命令行操作很不方便，我会使用NetBeans帮个忙。
好处很明显，我随便拿一台旧机器都可以飞快的开发，用时髦IDE的同事总是抱怨他们的即使编译影响开发速度，即便他们的机器已经比我好多了。我也很容易就在服务器上远程开发。
    目前正打算用Emacs开发C++，之前一直用NetBeans开发c++。但是非常担心Emacs下面没有什么好的智能提示解决方案，C++的模板是非常复杂的,NetBeans的智能提示相当准，这是我时间紧张的时候用NetBeans的原因。

    auto complete还是很不错的, 再加上cedet就差不多了, see http://emacser.com/cedet.htm, http://emacser.com/auto-complete.htm

### Comment - 3
    我想在emacs中用C-c $ 来定义字符$$,并把光标放在两个$中间,
    以及类似的C-c { -> {}, C-c ( -> (), 请问要如何实现.

    (defun insert2$ ()
    (interactive)
    (insert “$$”)
    (backward-char)
    )
    (global-set-key (kbd “C-c $”) ‘insert2$)
    其他的,改一改就行
